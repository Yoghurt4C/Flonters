plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'org.jetbrains.gradle.plugin.idea-ext' version '0.7'
}

sourceCompatibility = 1.16
targetCompatibility = 1.16

mod_name = project.mod_name
minecraft_version = project.minecraft_version
archivesBaseName = "${project.mod_name}"
version = project.version+"+"+project.minecraft_version


repositories {
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.shedaniel.me/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	//modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"
	modImplementation ("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") { exclude(module: "ModMenu") }

	implementation 'org.jetbrains:annotations:15.0'
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

idea {
	module {
		inheritOutputDirs = false
		outputDir = compileJava.destinationDir
		testOutputDir = compileTestJava.destinationDir
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}


tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE.md"
}

idea.project.settings {
    delegateActions {
        delegateBuildRunToGradle = false
        testRunner = org.jetbrains.gradle.ext.ActionDelegationConfig.TestRunner.PLATFORM
    }
}